{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/tarea.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TareaListComponent_tr_25_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function TareaListComponent_tr_25_button_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const tarea_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.marcarComoCompletada(tarea_r1));\n    });\n    i0.ɵɵtext(1, \" Marcar como completada \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TareaListComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtemplate(11, TareaListComponent_tr_25_button_11_Template, 2, 0, \"button\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tarea_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tarea_r1.titulo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 5, tarea_r1.fechaLimite));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(tarea_r1.completada ? \"S\\u00ED\" : \"No\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tarea_r1.prioridad);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !tarea_r1.completada);\n  }\n}\nexport class TareaListComponent {\n  constructor(tareaService) {\n    this.tareaService = tareaService;\n    this.tareas = [];\n    this.filtro = 'todas';\n  }\n  ngOnInit() {\n    this.obtenerTareas();\n  }\n  obtenerTareas() {\n    this.tareaService.getTareas().subscribe(data => {\n      this.tareas = data;\n    });\n  }\n  get tareasFiltradas() {\n    if (this.filtro === 'completadas') {\n      return this.tareas.filter(t => t.completada);\n    } else if (this.filtro === 'pendientes') {\n      return this.tareas.filter(t => !t.completada);\n    }\n    return this.tareas;\n  }\n  marcarComoCompletada(tarea) {\n    const tareaActualizada = {\n      ...tarea,\n      completada: true\n    };\n    this.tareaService.actualizarTarea(tarea.id, tareaActualizada).subscribe({\n      next: () => {\n        alert('La tarea fue marcada como completada.');\n        this.obtenerTareas(); // recarga lista\n      },\n\n      error: err => {\n        console.error('Error al actualizar la tarea:', err);\n        alert('Ocurrió un error al marcar la tarea como completada.');\n      }\n    });\n  }\n  static {\n    this.ɵfac = function TareaListComponent_Factory(t) {\n      return new (t || TareaListComponent)(i0.ɵɵdirectiveInject(i1.TareaService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TareaListComponent,\n      selectors: [[\"app-tarea-list\"]],\n      decls: 26,\n      vars: 2,\n      consts: [[\"for\", \"filtro\"], [\"id\", \"filtro\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"todas\"], [\"value\", \"completadas\"], [\"value\", \"pendientes\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\", 4, \"ngIf\"], [3, \"click\"]],\n      template: function TareaListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Lista de Tareas\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"label\", 0);\n          i0.ɵɵtext(3, \"Filtrar por estado:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"select\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function TareaListComponent_Template_select_ngModelChange_4_listener($event) {\n            return ctx.filtro = $event;\n          });\n          i0.ɵɵelementStart(5, \"option\", 2);\n          i0.ɵɵtext(6, \"Todas\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"option\", 3);\n          i0.ɵɵtext(8, \"Completadas\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"option\", 4);\n          i0.ɵɵtext(10, \"Pendientes\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(11, \"br\")(12, \"br\");\n          i0.ɵɵelementStart(13, \"table\")(14, \"tr\")(15, \"th\");\n          i0.ɵɵtext(16, \"T\\u00EDtulo\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"th\");\n          i0.ɵɵtext(18, \"Fecha l\\u00EDmite\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"th\");\n          i0.ɵɵtext(20, \"Completada\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"th\");\n          i0.ɵɵtext(22, \"Prioridad\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"th\");\n          i0.ɵɵtext(24, \"Acciones\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(25, TareaListComponent_tr_25_Template, 12, 7, \"tr\", 5);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.filtro);\n          i0.ɵɵadvance(21);\n          i0.ɵɵproperty(\"ngForOf\", ctx.tareasFiltradas);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i2.DatePipe],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","TareaListComponent_tr_25_button_11_Template_button_click_0_listener","ɵɵrestoreView","_r5","tarea_r1","ɵɵnextContext","$implicit","ctx_r3","ɵɵresetView","marcarComoCompletada","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","TareaListComponent_tr_25_button_11_Template","ɵɵadvance","ɵɵtextInterpolate","titulo","ɵɵpipeBind1","fechaLimite","completada","prioridad","ɵɵproperty","TareaListComponent","constructor","tareaService","tareas","filtro","ngOnInit","obtenerTareas","getTareas","subscribe","data","tareasFiltradas","filter","t","tarea","tareaActualizada","actualizarTarea","id","next","alert","error","err","console","ɵɵdirectiveInject","i1","TareaService","selectors","decls","vars","consts","template","TareaListComponent_Template","rf","ctx","TareaListComponent_Template_select_ngModelChange_4_listener","$event","ɵɵelement","TareaListComponent_tr_25_Template"],"sources":["C:\\Users\\ASUS\\Desktop\\gestortareas\\gestor-tareas-frontend\\src\\app\\components\\tarea-list\\tarea-list.component.ts","C:\\Users\\ASUS\\Desktop\\gestortareas\\gestor-tareas-frontend\\src\\app\\components\\tarea-list\\tarea-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TareaService } from '../../services/tarea.service';\nimport { Tarea } from '../../models/tarea.model';\n\n@Component({\n  selector: 'app-tarea-list',\n  templateUrl: './tarea-list.component.html'\n})\nexport class TareaListComponent implements OnInit {\n  tareas: Tarea[] = [];\n  filtro: string = 'todas';\n\n  constructor(private tareaService: TareaService) {}\n\n  ngOnInit() {\n    this.obtenerTareas();\n  }\n\n  obtenerTareas() {\n    this.tareaService.getTareas().subscribe(data => {\n      this.tareas = data;\n    });\n  }\n\n  get tareasFiltradas(): Tarea[] {\n    if (this.filtro === 'completadas') {\n      return this.tareas.filter(t => t.completada);\n    } else if (this.filtro === 'pendientes') {\n      return this.tareas.filter(t => !t.completada);\n    }\n    return this.tareas;\n  }\n\n  marcarComoCompletada(tarea: Tarea) {\n    const tareaActualizada = { ...tarea, completada: true };\n    this.tareaService.actualizarTarea(tarea.id!, tareaActualizada).subscribe({\n      next: () => {\n        alert('La tarea fue marcada como completada.');\n        this.obtenerTareas();  // recarga lista\n      },\n      error: err => {\n        console.error('Error al actualizar la tarea:', err);\n        alert('Ocurrió un error al marcar la tarea como completada.');\n      }\n    });\n  }\n}\n","<h2>Lista de Tareas</h2>\n\n<label for=\"filtro\">Filtrar por estado:</label>\n<select id=\"filtro\" [(ngModel)]=\"filtro\">\n  <option value=\"todas\">Todas</option>\n  <option value=\"completadas\">Completadas</option>\n  <option value=\"pendientes\">Pendientes</option>\n</select>\n\n<br><br>\n\n<table>\n  <tr>\n    <th>Título</th>\n    <th>Fecha límite</th>\n    <th>Completada</th>\n    <th>Prioridad</th>\n    <th>Acciones</th>\n  </tr>\n  <tr *ngFor=\"let tarea of tareasFiltradas\">\n    <td>{{ tarea.titulo }}</td>\n    <td>{{ tarea.fechaLimite | date }}</td>\n    <td>{{ tarea.completada ? 'Sí' : 'No' }}</td>\n    <td>{{ tarea.prioridad }}</td>\n    <td>\n      <button *ngIf=\"!tarea.completada\" (click)=\"marcarComoCompletada(tarea)\">\n        Marcar como completada\n      </button>\n    </td>\n  </tr>\n</table>\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}